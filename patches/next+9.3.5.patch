diff --git a/node_modules/next/dist/build/webpack-config.js b/node_modules/next/dist/build/webpack-config.js
index 5bda7b0..88f2884 100644
--- a/node_modules/next/dist/build/webpack-config.js
+++ b/node_modules/next/dist/build/webpack-config.js
@@ -93,7 +93,7 @@ new _chunkNamesPlugin.default(),new _webpack.default.DefinePlugin({...(config.ex
 // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack
 config.future.excludeDefaultMomentLocales&&new _webpack.default.IgnorePlugin(/^\.\/locale$/,/moment$/),...(dev?(()=>{// Even though require.cache is server only we have to clear assets from both compilations
 // This is because the client compilation generates the build manifest that's used on the server side
-const{NextJsRequireCacheHotReloader}=require('./webpack/plugins/nextjs-require-cache-hot-reloader');const{UnlinkRemovedPagesPlugin}=require('./webpack/plugins/unlink-removed-pages-plugin');const devPlugins=[new UnlinkRemovedPagesPlugin(),new _webpack.default.NoEmitOnErrorsPlugin(),new NextJsRequireCacheHotReloader()];if(!isServer){const AutoDllPlugin=require('next/dist/compiled/autodll-webpack-plugin')(distDir);devPlugins.push(new AutoDllPlugin({filename:'[name]_[hash].js',path:'./static/development/dll',context:dir,entry:{dll:['react','react-dom']},config:{devtool,mode:webpackMode,resolve:resolveConfig}}));devPlugins.push(new _webpack.default.HotModuleReplacementPlugin());}return devPlugins;})():[]),!dev&&new _webpack.default.HashedModuleIdsPlugin(),!dev&&new _webpack.default.IgnorePlugin({checkResource:resource=>{return /react-is/.test(resource);},checkContext:context=>{return /next-server[\\/]dist[\\/]/.test(context)||/next[\\/]dist[\\/]/.test(context);}}),isServerless&&isServer&&new _serverlessPlugin.ServerlessPlugin(),isServer&&new _pagesManifestPlugin.default(isLikeServerless),target==='server'&&isServer&&new _nextjsSsrModuleCache.default({outputPath}),isServer&&new _nextjsSsrImport.default(),!isServer&&new _buildManifestPlugin.default({buildId,clientManifest:config.experimental.granularChunks,modern:config.experimental.modern}),tracer&&new _profilingPlugin.ProfilingPlugin({tracer}),!isServer&&useTypeScript&&!ignoreTypeScriptErrors&&new _forkTsCheckerWebpackPlugin.default(_pnpWebpackPlugin.default.forkTsCheckerOptions({typescript:typeScriptPath,async:dev,useTypescriptIncrementalApi:true,checkSyntacticErrors:true,tsconfig:tsConfigPath,reportFiles:['**','!**/__tests__/**','!**/?(*.)(spec|test).*'],compilerOptions:{isolatedModules:true,noEmit:true},silent:true,formatter:'codeframe'})),config.experimental.modern&&!isServer&&!dev&&new _nextEsmPlugin.default({filename:getFileName=>(...args)=>{const name=typeof getFileName==='function'?getFileName(...args):getFileName;return name.includes('.js')?name.replace(/\.js$/,'.module.js'):escapePathVariables(args[0].chunk.name.replace(/\.js$/,'.module.js'));},chunkFilename:inputChunkName=>inputChunkName.replace(/\.js$/,'.module.js')}),config.experimental.conformance&&!dev&&new _webpackConformancePlugin.default({tests:[!isServer&&conformanceConfig.MinificationConformanceCheck.enabled&&new _webpackConformancePlugin.MinificationConformanceCheck(),conformanceConfig.ReactSyncScriptsConformanceCheck.enabled&&new _webpackConformancePlugin.ReactSyncScriptsConformanceCheck({AllowedSources:conformanceConfig.ReactSyncScriptsConformanceCheck.allowedSources||[]}),!isServer&&conformanceConfig.DuplicatePolyfillsConformanceCheck.enabled&&new _webpackConformancePlugin.DuplicatePolyfillsConformanceCheck({BlockedAPIToBePolyfilled:conformanceConfig.DuplicatePolyfillsConformanceCheck.BlockedAPIToBePolyfilled})].filter(Boolean)})].filter(Boolean)};// Support tsconfig and jsconfig baseUrl
+const{NextJsRequireCacheHotReloader}=require('./webpack/plugins/nextjs-require-cache-hot-reloader');const{UnlinkRemovedPagesPlugin}=require('./webpack/plugins/unlink-removed-pages-plugin');const devPlugins=[new UnlinkRemovedPagesPlugin(),new _webpack.default.NoEmitOnErrorsPlugin(),new NextJsRequireCacheHotReloader()];if(!isServer){const AutoDllPlugin=require('next/dist/compiled/autodll-webpack-plugin')(distDir);devPlugins.push(new AutoDllPlugin({filename:'[name]_[hash].js',path:'./static/development/dll',context:dir,entry:{dll:['react','react-dom']},config:{devtool,mode:webpackMode,resolve:resolveConfig}}));devPlugins.push(new _webpack.default.HotModuleReplacementPlugin());}return devPlugins;})():[]),!dev&&new _webpack.default.HashedModuleIdsPlugin(),!dev&&new _webpack.default.IgnorePlugin({checkResource:resource=>{return /react-is/.test(resource);},checkContext:context=>{return /next-server[\\/]dist[\\/]/.test(context)||/next[\\/]dist[\\/]/.test(context);}}),isServerless&&isServer&&new _serverlessPlugin.ServerlessPlugin(),isServer&&new _pagesManifestPlugin.default(isLikeServerless),target==='server'&&isServer&&new _nextjsSsrModuleCache.default({outputPath}),isServer&&new _nextjsSsrImport.default(),!isServer&&new _buildManifestPlugin.default({buildId,clientManifest:config.experimental.granularChunks,modern:config.experimental.modern}),tracer&&new _profilingPlugin.ProfilingPlugin({tracer}),!isServer&&useTypeScript&&!ignoreTypeScriptErrors&&new _forkTsCheckerWebpackPlugin.default(_pnpWebpackPlugin.default.forkTsCheckerOptions({typescript:typeScriptPath,async:dev,useTypescriptIncrementalApi:true,checkSyntacticErrors:true,tsconfig:tsConfigPath,reportFiles:['**','!**/__tests__/**','!**/?(*.)(spec|test).*'],compilerOptions:{isolatedModules:true},silent:true,formatter:'codeframe'})),config.experimental.modern&&!isServer&&!dev&&new _nextEsmPlugin.default({filename:getFileName=>(...args)=>{const name=typeof getFileName==='function'?getFileName(...args):getFileName;return name.includes('.js')?name.replace(/\.js$/,'.module.js'):escapePathVariables(args[0].chunk.name.replace(/\.js$/,'.module.js'));},chunkFilename:inputChunkName=>inputChunkName.replace(/\.js$/,'.module.js')}),config.experimental.conformance&&!dev&&new _webpackConformancePlugin.default({tests:[!isServer&&conformanceConfig.MinificationConformanceCheck.enabled&&new _webpackConformancePlugin.MinificationConformanceCheck(),conformanceConfig.ReactSyncScriptsConformanceCheck.enabled&&new _webpackConformancePlugin.ReactSyncScriptsConformanceCheck({AllowedSources:conformanceConfig.ReactSyncScriptsConformanceCheck.allowedSources||[]}),!isServer&&conformanceConfig.DuplicatePolyfillsConformanceCheck.enabled&&new _webpackConformancePlugin.DuplicatePolyfillsConformanceCheck({BlockedAPIToBePolyfilled:conformanceConfig.DuplicatePolyfillsConformanceCheck.BlockedAPIToBePolyfilled})].filter(Boolean)})].filter(Boolean)};// Support tsconfig and jsconfig baseUrl
 if(resolvedBaseUrl){var _webpackConfig$resolv,_webpackConfig$resolv2;(_webpackConfig$resolv=webpackConfig.resolve)===null||_webpackConfig$resolv===void 0?void 0:(_webpackConfig$resolv2=_webpackConfig$resolv.modules)===null||_webpackConfig$resolv2===void 0?void 0:_webpackConfig$resolv2.push(resolvedBaseUrl);}if(config.experimental.jsconfigPaths&&((_jsConfig2=jsConfig)===null||_jsConfig2===void 0?void 0:(_jsConfig2$compilerOp=_jsConfig2.compilerOptions)===null||_jsConfig2$compilerOp===void 0?void 0:_jsConfig2$compilerOp.paths)&&resolvedBaseUrl){var _webpackConfig$resolv3,_webpackConfig$resolv4;(_webpackConfig$resolv3=webpackConfig.resolve)===null||_webpackConfig$resolv3===void 0?void 0:(_webpackConfig$resolv4=_webpackConfig$resolv3.plugins)===null||_webpackConfig$resolv4===void 0?void 0:_webpackConfig$resolv4.push(new _jsconfigPathsPlugin.JsConfigPathsPlugin(jsConfig.compilerOptions.paths,resolvedBaseUrl));}webpackConfig=await(0,_config.build)(webpackConfig,{rootDirectory:dir,customAppFile,isDevelopment:dev,isServer,hasSupportCss:!!config.experimental.css,hasSupportScss:!!config.experimental.scss,assetPrefix:config.assetPrefix||'',sassOptions:config.experimental.sassOptions});if(typeof config.webpack==='function'){webpackConfig=config.webpack(webpackConfig,{dir,dev,isServer,buildId,config,defaultLoaders,totalPages,webpack:_webpack.default});if(typeof webpackConfig.then==='function'){console.warn('> Promise returned in next config. https://err.sh/zeit/next.js/promise-in-next-config');}}function canMatchCss(rule){if(!rule){return false;}const fileNames=['/tmp/test.css','/tmp/test.scss','/tmp/test.sass','/tmp/test.less','/tmp/test.styl'];if(rule instanceof RegExp&&fileNames.some(input=>rule.test(input))){return true;}if(typeof rule==='function'){if(fileNames.some(input=>{try{if(rule(input)){return true;}}catch(_){}return false;})){return true;}}if(Array.isArray(rule)&&rule.some(canMatchCss)){return true;}return false;}if(config.experimental.css){var _ref,_webpackConfig$module;const hasUserCssConfig=(_ref=(_webpackConfig$module=webpackConfig.module)===null||_webpackConfig$module===void 0?void 0:_webpackConfig$module.rules.some(rule=>canMatchCss(rule.test)||canMatchCss(rule.include)))!==null&&_ref!==void 0?_ref:false;if(hasUserCssConfig){var _webpackConfig$module2,_webpackConfig$plugin,_webpackConfig$optimi,_webpackConfig$optimi2;// only show warning for one build
 if(isServer){console.warn(_chalk.default.yellow.bold('Warning: ')+_chalk.default.bold('Built-in CSS support is being disabled due to custom CSS configuration being detected.\n')+'See here for more info: https://err.sh/next.js/built-in-css-disabled\n');}if((_webpackConfig$module2=webpackConfig.module)===null||_webpackConfig$module2===void 0?void 0:_webpackConfig$module2.rules.length){// Remove default CSS Loader
 webpackConfig.module.rules=webpackConfig.module.rules.filter(r=>{var _r$oneOf,_r$oneOf$;return!(typeof((_r$oneOf=r.oneOf)===null||_r$oneOf===void 0?void 0:(_r$oneOf$=_r$oneOf[0])===null||_r$oneOf$===void 0?void 0:_r$oneOf$.options)==='object'&&r.oneOf[0].options.__next_css_remove===true);});}if((_webpackConfig$plugin=webpackConfig.plugins)===null||_webpackConfig$plugin===void 0?void 0:_webpackConfig$plugin.length){// Disable CSS Extraction Plugin
diff --git a/node_modules/next/dist/lib/verifyTypeScriptSetup.js b/node_modules/next/dist/lib/verifyTypeScriptSetup.js
index 9452ee9..656b3f5 100644
--- a/node_modules/next/dist/lib/verifyTypeScriptSetup.js
+++ b/node_modules/next/dist/lib/verifyTypeScriptSetup.js
@@ -1,7 +1,7 @@
 "use strict";exports.__esModule=true;exports.verifyTypeScriptSetup=verifyTypeScriptSetup;var _chalk=_interopRequireDefault(require("next/dist/compiled/chalk"));var _fs=_interopRequireDefault(require("fs"));var _os=_interopRequireDefault(require("os"));var _path=_interopRequireDefault(require("path"));var _util=require("util");var _fileExists=require("./file-exists");var _recursiveReaddir=require("./recursive-readdir");var _resolveRequest=require("./resolve-request");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}const writeFile=(0,_util.promisify)(_fs.default.writeFile);const readFile=(0,_util.promisify)(_fs.default.readFile);function writeJson(fileName,object){return writeFile(fileName,JSON.stringify(object,null,2).replace(/\n/g,_os.default.EOL)+_os.default.EOL);}async function hasTypeScript(dir){const typescriptFiles=await(0,_recursiveReaddir.recursiveReadDir)(dir,/.*\.(ts|tsx)$/,/(node_modules|.*\.d\.ts)/);return typescriptFiles.length>0;}async function checkDependencies({dir,isYarn}){const requiredPackages=[{file:'typescript',pkg:'typescript'},{file:'@types/react/index.d.ts',pkg:'@types/react'},{file:'@types/node/index.d.ts',pkg:'@types/node'}];let resolutions=new Map();const missingPackages=requiredPackages.filter(p=>{try{resolutions.set(p.pkg,(0,_resolveRequest.resolveRequest)(p.file,`${dir}/`));return false;}catch(_){return true;}});if(missingPackages.length<1){return resolutions.get('typescript');}const packagesHuman=missingPackages.map((p,index,{length})=>(index>0?index===length-1?length>2?', and ':' and ':', ':'')+p.pkg).join('');const packagesCli=missingPackages.map(p=>p.pkg).join(' ');console.error(_chalk.default.bold.red(`It looks like you're trying to use TypeScript but do not have the required package(s) installed.`));console.error();console.error(_chalk.default.bold(`Please install ${_chalk.default.bold(packagesHuman)} by running:`));console.error();console.error(`\t${_chalk.default.bold.cyan((isYarn?'yarn add --dev':'npm install --save-dev')+' '+packagesCli)}`);console.error();console.error(_chalk.default.bold('If you are not trying to use TypeScript, please remove the '+_chalk.default.cyan('tsconfig.json')+' file from your package root (and any TypeScript files).'));console.error();process.exit(1);}async function verifyTypeScriptSetup(dir,pagesDir){const tsConfigPath=_path.default.join(dir,'tsconfig.json');const yarnLockFile=_path.default.join(dir,'yarn.lock');const hasTsConfig=await(0,_fileExists.fileExists)(tsConfigPath);const isYarn=await(0,_fileExists.fileExists)(yarnLockFile);let firstTimeSetup=false;if(hasTsConfig){const tsConfig=await readFile(tsConfigPath,'utf8').then(val=>val.trim());firstTimeSetup=tsConfig===''||tsConfig==='{}';}else{const hasTypeScriptFiles=await hasTypeScript(pagesDir);if(hasTypeScriptFiles){firstTimeSetup=true;}else{return;}}const tsPath=await checkDependencies({dir,isYarn});const ts=await Promise.resolve().then(()=>_interopRequireWildcard(require(`${tsPath}`)));const compilerOptions={// These are suggested values and will be set when not present in the
 // tsconfig.json
 // 'parsedValue' matches the output value from ts.parseJsonConfigFileContent()
-target:{parsedValue:ts.ScriptTarget.ES5,suggested:'es5'},lib:{suggested:['dom','dom.iterable','esnext']},allowJs:{suggested:true},skipLibCheck:{suggested:true},strict:{suggested:false},forceConsistentCasingInFileNames:{suggested:true},noEmit:{suggested:true},// These values are required and cannot be changed by the user
+target:{parsedValue:ts.ScriptTarget.ES5,suggested:'es5'},lib:{suggested:['dom','dom.iterable','esnext']},allowJs:{suggested:true},skipLibCheck:{suggested:true},strict:{suggested:false},forceConsistentCasingInFileNames:{suggested:true},// These values are required and cannot be changed by the user
 // Keep this in sync with the webpack config
 esModuleInterop:{value:true,reason:'requirement for babel'},module:{parsedValue:ts.ModuleKind.ESNext,value:'esnext',reason:'for dynamic import() support'},moduleResolution:{parsedValue:ts.ModuleResolutionKind.NodeJs,value:'node',reason:'to match webpack resolution'},resolveJsonModule:{value:true},isolatedModules:{value:true,reason:'requirement for babel'},jsx:{parsedValue:ts.JsxEmit.Preserve,value:'preserve'}};const formatDiagnosticHost={getCanonicalFileName:fileName=>fileName,getCurrentDirectory:ts.sys.getCurrentDirectory,getNewLine:()=>_os.default.EOL};if(firstTimeSetup){console.log(_chalk.default.yellow(`We detected TypeScript in your project and created a ${_chalk.default.bold('tsconfig.json')} file for you.`));console.log();await writeJson(tsConfigPath,{});}const messages=[];let appTsConfig;let parsedTsConfig;let parsedCompilerOptions;try{var _result$errors;const{config:readTsConfig,error}=ts.readConfigFile(tsConfigPath,ts.sys.readFile);if(error){throw new Error(ts.formatDiagnostic(error,formatDiagnosticHost));}appTsConfig=readTsConfig;// Get TS to parse and resolve any "extends"
 // Calling this function also mutates the tsconfig, adding in "include" and
